<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
    http://www.springframework.org/schema/beans/spring-beans-4.3.xsd      
	http://www.springframework.org/schema/context    
	http://www.springframework.org/schema/context/spring-context-4.3.xsd   
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd"
	default-lazy-init="true">

	<!-- 视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<!-- 将jsp页面放置在web-info中可以保护这些页面不被浏览器直接访问 -->
		<property name="prefix" value="/jsp/" />
		<property name="suffix" value=".jsp"></property>
	</bean>

	<!-- 扫描web包，应用Spring的注解 @Controller -->
	<!-- 具体的包可以使spring在加载时不扫描没有必要的包 -->
	<context:component-scan base-package="com.example.controller" />
	<context:component-scan base-package="cn.mrdear.pay.controller" />
	<!-- 扫描业务层service实现类 -->
	<context:component-scan base-package="cn.mrdear.pay.service.*" />
	<context:component-scan base-package="com.example.service.*" />
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
			<bean class="org.springframework.http.converter.FormHttpMessageConverter" />
			<bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />
			<!--<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" 
				/> -->
			<bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<!-- 支持JSON数据格式 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
					<!-- 解析导出文件byte流 -->
				<ref bean="fastJsonHttpMessageConverter" />
				<!-- <ref bean="mappingJacksonHttpMessageConverter" /> -->
			</list>
		</property>
	</bean>
	<!--<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"> 
		</bean> -->
	<!-- 使用fastJson来支持JSON数据格式 -->
	<bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
				<value>application/json</value>
			</list>
		</property>
		<property name="features">
			<list>
				<value>WriteMapNullValue</value>
				<value>QuoteFieldNames</value>
			</list>
		</property>
	</bean>
	<!-- 精准拦截器 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"> 
		<property name="interceptors"> <list> <bean class="com.example.inteceptor.MyInteceptor"></bean> 
		</list> </property> </bean> -->
	<!-- <mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.example.inteceptor.MyInteceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors> -->
	<!-- 对静态资源文件的访问 方案一 （二选一） -->
	<!-- <mvc:resources location="/images/" mapping="/images/**"/> <mvc:resources 
		location="/css/" mapping="/css/**"/> <mvc:resources location="/js/" mapping="/js/**"/> -->

	<!-- 以上和下面这句话等效 -->
	<!-- 对静态资源文件的访问 方案一 （二选一） -->
	<mvc:default-servlet-handler />
	<!-- 文件上传大小配置 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		p:defaultEncoding="UTF-8">
		<property name="maxUploadSize" value="1024000000"></property>
	</bean>
</beans>  